name: Sync Branch & Auto Build

on:
  schedule:
    # 每周一UTC时间0点（北京时间周一8点）检查一次
    - cron: '0 0 * * 1'
  workflow_dispatch:
    inputs:
      force_build:
        description: '强制编译（即使没有更新）'
        required: false
        type: boolean
        default: false

jobs:
  sync-branch:
    runs-on: ubuntu-latest
    outputs:
      update_available: ${{ steps.check-updates.outputs.update_available }}
    steps:
    # 步骤1：检出基础分支
    - name: Checkout base branch
      uses: actions/checkout@v4
      with:
        ref: 'main'
        fetch-depth: 0
    
    # 步骤2：创建或检出目标分支
    - name: Prepare target branch
      id: prepare-branch
      run: |
        if git show-ref --quiet refs/heads/xiangme/AndroidAPS; then
          echo "目标分支已存在，正在检出..."
          git checkout xiangme/AndroidAPS
        else
          echo "目标分支不存在，正在创建..."
          git checkout -b xiangme/AndroidAPS
          git commit --allow-empty -m "初始化分支"
          git push origin xiangme/AndroidAPS
        fi
        
    # 步骤3：添加上游仓库
    - name: Add upstream repository
      run: |
        git remote add upstream https://github.com/diyaps/AndroidAPS.git
        git fetch upstream
        
    # 步骤4：检测上游更新
    - name: Check for updates
      id: check-updates
      run: |
        # 获取上游默认分支
        DEFAULT_BRANCH=$(git remote show upstream | grep 'HEAD branch' | cut -d' ' -f5)
        echo "上游默认分支: $DEFAULT_BRANCH"
        
        # 获取上游最新提交
        git fetch upstream $DEFAULT_BRANCH
        UPSTREAM_HASH=$(git rev-parse upstream/$DEFAULT_BRANCH)
        
        # 获取当前分支最新提交
        CURRENT_HASH=$(git rev-parse HEAD)
        
        echo "上游最新提交: $UPSTREAM_HASH"
        echo "当前分支提交: $CURRENT_HASH"
        
        # 计算提交差异数量
        COMMIT_DIFF=$(git rev-list $CURRENT_HASH..upstream/$DEFAULT_BRANCH --count)
        echo "提交差异数量: $COMMIT_DIFF"
        
        if [ "$COMMIT_DIFF" -gt 0 ]; then
          echo "检测到更新!"
          echo "update_available=true" >> $GITHUB_OUTPUT
        else
          echo "无新提交"
          echo "update_available=false" >> $GITHUB_OUTPUT
        fi
        
    # 步骤5：合并上游更新（如果有更新）
    - name: Merge upstream changes
      if: steps.check-updates.outputs.update_available == 'true'
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        
        DEFAULT_BRANCH=$(git remote show upstream | grep 'HEAD branch' | cut -d' ' -f5)
        git reset --hard upstream/$DEFAULT_BRANCH
        git push origin xiangme/AndroidAPS --force
        
  auto-build:
    needs: sync-branch
    # 仅当有更新或手动强制编译时运行
    if: |
      needs.sync-branch.outputs.update_available == 'true' ||
      github.event.inputs.force_build == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: 'xiangme/AndroidAPS'
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Build APK
      run: ./gradlew assembleDebug
      
    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: AndroidAPS-APK
        path: app/build/outputs/apk/debug/
        retention-days: 14  # 保留两周
